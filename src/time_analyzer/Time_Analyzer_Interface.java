/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package time_analyzer;

import java.awt.event.ActionEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.LinkedList;
import javax.swing.JOptionPane;

/**
 *
 * @author hp-pc
 */
public class Time_Analyzer_Interface extends javax.swing.JFrame {

    /**
     * Creates new form Time_Analyzer_Interface
     */
    int rowCounter = 0;

    int time_intervel_Minute = 0;
    int timeStart = 0;
    int timeEnd = 0;

    Float rc;
    Float rd;
    Float qf;

    Float rc_percentage;
    Float rd_percentage;
    Float qf_percentage;

    public Time_Analyzer_Interface() {
        initComponents();
        start_new_calculation_jButton3ActionPerformed(null);
//            time_table_jTable1.setValueAt(1, 0, 0);
    }

    public void setting_minute_the_rc_rd_qf() {
        rc = Float.parseFloat(minute_rc_jTextField2.getText().toString());
        rd = Float.parseFloat(minute_rd_jTextField3.getText().toString());
        qf = Float.parseFloat(minute_qf_jTextField1.getText().toString());
    }

    public void setting_percentage_rc_rd_qf() {
        rc_percentage = Float.parseFloat(percentage_rc_jTextField5.getText().toString());
        rd_percentage = Float.parseFloat(percentage_rd_jTextField4.getText().toString());
        qf_percentage = Float.parseFloat(percentage_qf_jTextField6.getText().toString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Header_jPanel1 = new javax.swing.JPanel();
        Time_Analyzer_jLabel1 = new javax.swing.JLabel();
        Start_jLabel1 = new javax.swing.JLabel();
        End_jLabel2 = new javax.swing.JLabel();
        Button_panel_jPanel1 = new javax.swing.JPanel();
        start_jTextField1 = new javax.swing.JTextField();
        end_jTextField2 = new javax.swing.JTextField();
        find_difference_jButton2 = new javax.swing.JButton();
        show_time_intervel_jLabel1 = new javax.swing.JLabel();
        minute_jLabel7 = new javax.swing.JLabel();
        calculate_jButton1 = new javax.swing.JButton();
        clear_calculate_jButton2 = new javax.swing.JButton();
        rd_jLabel1 = new javax.swing.JLabel();
        rc_jLabel2 = new javax.swing.JLabel();
        qf_jLabel3 = new javax.swing.JLabel();
        minute_qf_jTextField1 = new javax.swing.JTextField();
        minute_rc_jTextField2 = new javax.swing.JTextField();
        minute_rd_jTextField3 = new javax.swing.JTextField();
        percentage_rd_jTextField4 = new javax.swing.JTextField();
        percentage_rc_jTextField5 = new javax.swing.JTextField();
        percentage_qf_jTextField6 = new javax.swing.JTextField();
        minute_jLabel4 = new javax.swing.JLabel();
        percenatge_jLabel5 = new javax.swing.JLabel();
        clear_time_inputs_jButton1 = new javax.swing.JButton();
        set_data_to_table_jButton1 = new javax.swing.JButton();
        start_new_calculation_jButton3 = new javax.swing.JButton();
        Total_Time_after_Analysis_jLabel7 = new javax.swing.JLabel();
        show_total_time_after_analysis_jLabel8 = new javax.swing.JLabel();
        take_end_as_start_jButton1 = new javax.swing.JButton();
        total_percentage_jLabel7 = new javax.swing.JLabel();
        Calculate_minute_jButton1 = new javax.swing.JButton();
        all_qf_jButton1 = new javax.swing.JButton();
        all_rd_jButton2 = new javax.swing.JButton();
        all_rc_jButton3 = new javax.swing.JButton();
        rest_qf_jButton1 = new javax.swing.JButton();
        rest_rc_jButton3 = new javax.swing.JButton();
        rest_rd_jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        counterValue = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        fileName1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        timeType_textArea = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        counterLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Analyze = new javax.swing.JButton();
        autoAnaLize_checkBox = new javax.swing.JCheckBox();
        autoTakeStartEnd_checkBox = new javax.swing.JCheckBox();
        table_jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        time_table_jTable1 = new javax.swing.JTable();
        total_time_jLabel1 = new javax.swing.JLabel();
        total_rd_jLabel2 = new javax.swing.JLabel();
        total_rc_jLabel3 = new javax.swing.JLabel();
        total_qf_jLabel4 = new javax.swing.JLabel();
        total_rst_jLabel5 = new javax.swing.JLabel();
        e_jLabel6 = new javax.swing.JLabel();
        calculate_the_result_jButton2 = new javax.swing.JButton();
        checker_that_all_right_jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Header_jPanel1.setBackground(new java.awt.Color(0, 153, 51));
        Header_jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Time_Analyzer_jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Time_Analyzer_jLabel1.setForeground(new java.awt.Color(255, 204, 51));
        Time_Analyzer_jLabel1.setText("Time Analyzer");
        Header_jPanel1.add(Time_Analyzer_jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(494, 5, -1, -1));

        Start_jLabel1.setBackground(new java.awt.Color(51, 255, 51));
        Start_jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Start_jLabel1.setText("Start");
        Header_jPanel1.add(Start_jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, -1, -1));

        End_jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        End_jLabel2.setText("End");
        Header_jPanel1.add(End_jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, -1, -1));

        Button_panel_jPanel1.setBackground(new java.awt.Color(51, 255, 204));
        Button_panel_jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        start_jTextField1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        start_jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        start_jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                start_jTextField1ActionPerformed(evt);
            }
        });
        Button_panel_jPanel1.add(start_jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 0, 127, -1));

        end_jTextField2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        end_jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        end_jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                end_jTextField2ActionPerformed(evt);
            }
        });
        Button_panel_jPanel1.add(end_jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 0, 127, -1));

        find_difference_jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        find_difference_jButton2.setText("Find Difference");
        find_difference_jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                find_difference_jButton2ActionPerformed(evt);
            }
        });
        Button_panel_jPanel1.add(find_difference_jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 0, 180, -1));

        show_time_intervel_jLabel1.setBackground(new java.awt.Color(255, 204, 51));
        show_time_intervel_jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Button_panel_jPanel1.add(show_time_intervel_jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 0, 80, 28));

        minute_jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        minute_jLabel7.setText("Minute");
        Button_panel_jPanel1.add(minute_jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 0, -1, -1));

        calculate_jButton1.setBackground(new java.awt.Color(204, 153, 255));
        calculate_jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        calculate_jButton1.setText("Calculate Perentage");
        calculate_jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculate_jButton1ActionPerformed(evt);
            }
        });
        Button_panel_jPanel1.add(calculate_jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 10, -1, -1));

        clear_calculate_jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        clear_calculate_jButton2.setText("Clear Minute and Percentage");
        clear_calculate_jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_calculate_jButton2ActionPerformed(evt);
            }
        });
        Button_panel_jPanel1.add(clear_calculate_jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 70, 230, -1));

        rd_jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rd_jLabel1.setText("RD");
        Button_panel_jPanel1.add(rd_jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, -1, -1));

        rc_jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rc_jLabel2.setText("RC");
        Button_panel_jPanel1.add(rc_jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 110, -1, -1));

        qf_jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        qf_jLabel3.setText("QF");
        Button_panel_jPanel1.add(qf_jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, -1, -1));

        minute_qf_jTextField1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        minute_qf_jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        minute_qf_jTextField1.setText("0");
        minute_qf_jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minute_qf_jTextField1ActionPerformed(evt);
            }
        });
        Button_panel_jPanel1.add(minute_qf_jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, 80, -1));

        minute_rc_jTextField2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        minute_rc_jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        minute_rc_jTextField2.setText("0");
        minute_rc_jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minute_rc_jTextField2ActionPerformed(evt);
            }
        });
        Button_panel_jPanel1.add(minute_rc_jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, 80, -1));

        minute_rd_jTextField3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        minute_rd_jTextField3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        minute_rd_jTextField3.setText("0");
        minute_rd_jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minute_rd_jTextField3ActionPerformed(evt);
            }
        });
        Button_panel_jPanel1.add(minute_rd_jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, 80, -1));

        percentage_rd_jTextField4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        percentage_rd_jTextField4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        percentage_rd_jTextField4.setText("0");
        percentage_rd_jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                percentage_rd_jTextField4ActionPerformed(evt);
            }
        });
        Button_panel_jPanel1.add(percentage_rd_jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, 80, -1));

        percentage_rc_jTextField5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        percentage_rc_jTextField5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        percentage_rc_jTextField5.setText("0");
        percentage_rc_jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                percentage_rc_jTextField5ActionPerformed(evt);
            }
        });
        Button_panel_jPanel1.add(percentage_rc_jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 200, 80, -1));

        percentage_qf_jTextField6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        percentage_qf_jTextField6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        percentage_qf_jTextField6.setText("0");
        percentage_qf_jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                percentage_qf_jTextField6ActionPerformed(evt);
            }
        });
        Button_panel_jPanel1.add(percentage_qf_jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 200, 80, -1));

        minute_jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        minute_jLabel4.setText("Minute");
        Button_panel_jPanel1.add(minute_jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, -1));

        percenatge_jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        percenatge_jLabel5.setText("Percentage");
        Button_panel_jPanel1.add(percenatge_jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, -1, -1));

        clear_time_inputs_jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        clear_time_inputs_jButton1.setText("Clear Time Input Fields");
        clear_time_inputs_jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_time_inputs_jButton1ActionPerformed(evt);
            }
        });
        Button_panel_jPanel1.add(clear_time_inputs_jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 160, -1, -1));

        set_data_to_table_jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        set_data_to_table_jButton1.setText("Set Data To Table");
        set_data_to_table_jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                set_data_to_table_jButton1ActionPerformed(evt);
            }
        });
        Button_panel_jPanel1.add(set_data_to_table_jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 90, -1, -1));

        start_new_calculation_jButton3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        start_new_calculation_jButton3.setText("Start New Calculation");
        start_new_calculation_jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                start_new_calculation_jButton3ActionPerformed(evt);
            }
        });
        Button_panel_jPanel1.add(start_new_calculation_jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 130, -1, -1));

        Total_Time_after_Analysis_jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Total_Time_after_Analysis_jLabel7.setText("Total");
        Button_panel_jPanel1.add(Total_Time_after_Analysis_jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 60, -1, -1));

        show_total_time_after_analysis_jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Button_panel_jPanel1.add(show_total_time_after_analysis_jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 80, 80, 30));

        take_end_as_start_jButton1.setText("Take End As Start");
        take_end_as_start_jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                take_end_as_start_jButton1ActionPerformed(evt);
            }
        });
        Button_panel_jPanel1.add(take_end_as_start_jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, -1, -1));
        Button_panel_jPanel1.add(total_percentage_jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 100, 70, 20));

        Calculate_minute_jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Calculate_minute_jButton1.setText("Calculate Minute");
        Calculate_minute_jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Calculate_minute_jButton1ActionPerformed(evt);
            }
        });
        Button_panel_jPanel1.add(Calculate_minute_jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 50, 200, -1));

        all_qf_jButton1.setText("All QF");
        all_qf_jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                all_qf_jButton1ActionPerformed(evt);
            }
        });
        Button_panel_jPanel1.add(all_qf_jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 30, -1, -1));

        all_rd_jButton2.setText("All RD");
        all_rd_jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                all_rd_jButton2ActionPerformed(evt);
            }
        });
        Button_panel_jPanel1.add(all_rd_jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, -1, -1));

        all_rc_jButton3.setText("All RC");
        all_rc_jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                all_rc_jButton3ActionPerformed(evt);
            }
        });
        Button_panel_jPanel1.add(all_rc_jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 30, -1, -1));

        rest_qf_jButton1.setText("Rest QF");
        rest_qf_jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rest_qf_jButton1ActionPerformed(evt);
            }
        });
        Button_panel_jPanel1.add(rest_qf_jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 170, -1, -1));

        rest_rc_jButton3.setText("Rest RC");
        rest_rc_jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rest_rc_jButton3ActionPerformed(evt);
            }
        });
        Button_panel_jPanel1.add(rest_rc_jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 170, -1, -1));

        rest_rd_jButton2.setText("Rest RD");
        rest_rd_jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rest_rd_jButton2ActionPerformed(evt);
            }
        });
        Button_panel_jPanel1.add(rest_rd_jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, -1, -1));

        jButton1.setText("Next");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                next_button_actionEvent(evt);
            }
        });
        Button_panel_jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, -1));
        Button_panel_jPanel1.add(counterValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 100, 50, -1));

        jLabel1.setBackground(new java.awt.Color(255, 255, 102));
        jLabel1.setText("File Name");
        Button_panel_jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 40, -1, 20));

        jButton2.setText("Load");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadTimesFromFile_button_actionEvent(evt);
            }
        });
        Button_panel_jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 40, -1, -1));
        jButton2.getAccessibleContext().setAccessibleName("Set");

        fileName1.setText("test.txt");
        Button_panel_jPanel1.add(fileName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 40, 170, -1));

        jButton3.setText("ReSet");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetValue_button_actionEvent(evt);
            }
        });
        Button_panel_jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 100, -1, -1));

        jLabel2.setText("Reset");
        Button_panel_jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 100, -1, -1));

        timeType_textArea.setColumns(20);
        timeType_textArea.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        timeType_textArea.setRows(5);
        jScrollPane2.setViewportView(timeType_textArea);

        Button_panel_jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(426, 126, 260, 70));

        jLabel3.setBackground(new java.awt.Color(255, 255, 204));
        jLabel3.setText("Type");
        jLabel3.setAutoscrolls(true);
        Button_panel_jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 100, -1, -1));

        counterLabel.setBackground(new java.awt.Color(204, 255, 102));
        counterLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Button_panel_jPanel1.add(counterLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 90, 60, 30));

        jLabel4.setText("Counter");
        Button_panel_jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 70, -1, -1));

        Analyze.setText("Analyze");
        Analyze.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnalyzeActionPerformed(evt);
            }
        });
        Button_panel_jPanel1.add(Analyze, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, -1, -1));

        autoAnaLize_checkBox.setText("Auto Ana");
        autoAnaLize_checkBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoAnaLize_checkBoxActionPerformed(evt);
            }
        });
        Button_panel_jPanel1.add(autoAnaLize_checkBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        autoTakeStartEnd_checkBox.setText("Auto Take");
        Button_panel_jPanel1.add(autoTakeStartEnd_checkBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, -1, -1));

        table_jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        time_table_jTable1.setBackground(new java.awt.Color(255, 255, 204));
        time_table_jTable1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        time_table_jTable1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        time_table_jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Serial", "Start Time", "End Time", "Interval", "RD", "RC", "QF"
            }
        ));
        time_table_jTable1.setGridColor(new java.awt.Color(255, 51, 51));
        time_table_jTable1.setRowHeight(30);
        jScrollPane1.setViewportView(time_table_jTable1);
        if (time_table_jTable1.getColumnModel().getColumnCount() > 0) {
            time_table_jTable1.getColumnModel().getColumn(0).setPreferredWidth(20);
        }

        total_time_jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        total_time_jLabel1.setText("Total :");

        total_rd_jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        total_rd_jLabel2.setText("RD :");

        total_rc_jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        total_rc_jLabel3.setText("RC :");

        total_qf_jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        total_qf_jLabel4.setText("QF :");

        total_rst_jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        total_rst_jLabel5.setText("RST:");

        e_jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        e_jLabel6.setText("E:");

        calculate_the_result_jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        calculate_the_result_jButton2.setText("Calculate the result: ");
        calculate_the_result_jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculate_the_result_jButton2ActionPerformed(evt);
            }
        });

        checker_that_all_right_jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout table_jPanel1Layout = new javax.swing.GroupLayout(table_jPanel1);
        table_jPanel1.setLayout(table_jPanel1Layout);
        table_jPanel1Layout.setHorizontalGroup(
            table_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(table_jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1)
                .addGap(10, 10, 10))
            .addGroup(table_jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(table_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(checker_that_all_right_jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(calculate_the_result_jButton2))
                .addGroup(table_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(table_jPanel1Layout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(total_time_jLabel1)
                        .addGap(91, 91, 91)
                        .addComponent(total_rd_jLabel2)
                        .addGap(109, 109, 109)
                        .addComponent(total_rc_jLabel3)
                        .addGap(109, 109, 109)
                        .addComponent(total_qf_jLabel4))
                    .addGroup(table_jPanel1Layout.createSequentialGroup()
                        .addGap(197, 197, 197)
                        .addComponent(total_rst_jLabel5)
                        .addGap(105, 105, 105)
                        .addComponent(e_jLabel6))))
        );
        table_jPanel1Layout.setVerticalGroup(
            table_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(table_jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                .addGap(6, 6, 6)
                .addGroup(table_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(calculate_the_result_jButton2)
                    .addGroup(table_jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(table_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(total_time_jLabel1)
                            .addComponent(total_rd_jLabel2)
                            .addComponent(total_rc_jLabel3)
                            .addComponent(total_qf_jLabel4))))
                .addGap(6, 6, 6)
                .addGroup(table_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(total_rst_jLabel5)
                    .addComponent(e_jLabel6)
                    .addComponent(checker_that_all_right_jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Header_jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(table_jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(Button_panel_jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Header_jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(Button_panel_jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(table_jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void minute_qf_jTextField1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_minute_qf_jTextField1ActionPerformed
    {//GEN-HEADEREND:event_minute_qf_jTextField1ActionPerformed
        // TODO add your handling code here:
        setting_minute_the_rc_rd_qf();
        show_total_time_after_analysis_jLabel8.setText(Float.toString((rc + rd + qf)));
    }//GEN-LAST:event_minute_qf_jTextField1ActionPerformed

    private void clear_time_inputs_jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_clear_time_inputs_jButton1ActionPerformed
    {//GEN-HEADEREND:event_clear_time_inputs_jButton1ActionPerformed
        // TODO add your handling code here:
        start_jTextField1.setText(null);
        end_jTextField2.setText(null);
    }//GEN-LAST:event_clear_time_inputs_jButton1ActionPerformed

    private void find_difference_jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_find_difference_jButton2ActionPerformed
    {//GEN-HEADEREND:event_find_difference_jButton2ActionPerformed
        // TODO add your handling code here:

        //for exception input.
        //will replace all spaces, even if accidentally come.
        timeStart = Integer.parseInt(start_jTextField1.getText().toString().replace(" ", ""));
        timeEnd = Integer.parseInt(end_jTextField2.getText().toString().replace(" ", ""));

        //For Start time --Variables    
        int StartTime_hour = 0;
        int StartTime_minute = 0;

        int EndTime_hour = 0;
        int EndTime_minute = 0;

        int previousEnd_Time = 0;
//       int time_intervel_Minute = 0; AS is has decleared GLobal.

        //For End time --Variables
        int IntervalTime_hour = 0;
        int IntervalTime_minute = 0;
        //For Interval time --Variables
        int Hour = 60;
        int StartTime_hourCarry = 1;

//        previousEnd_Time = timeEnd;
        //Start time Formating.
        StartTime_hour = (timeStart / 100);
        StartTime_minute = (timeStart % 100);

        //End time Formating.
        EndTime_hour = (timeEnd / 100);
        EndTime_minute = (timeEnd % 100);

        Hour = 60;
        StartTime_hourCarry = 1; //If any extra minute needed to add.

        //minute calculation block start
        //if end time Minute is smaller than start time minute. 
        if (EndTime_minute < StartTime_minute) {
            EndTime_minute = EndTime_minute + Hour;
            StartTime_hour = StartTime_hour + StartTime_hourCarry;
            IntervalTime_minute = EndTime_minute - StartTime_minute;
        } else {
            IntervalTime_minute = EndTime_minute - StartTime_minute;
        }
        //minute calculation block end

        IntervalTime_hour = EndTime_hour - StartTime_hour;

        time_intervel_Minute = (60 * IntervalTime_hour) + IntervalTime_minute;
        
        show_time_intervel_jLabel1.setText(Integer.toString(time_intervel_Minute));
//              Time_intervel = Time_intervel + time_intervel_Minute;

        timeStart = previousEnd_Time;
        if(time_intervel_Minute < 0 ){
            JOptionPane.showMessageDialog(rootPane, "Negetive Time please Fix.");
        }
        
    }//GEN-LAST:event_find_difference_jButton2ActionPerformed

    private void start_new_calculation_jButton3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_start_new_calculation_jButton3ActionPerformed
    {//GEN-HEADEREND:event_start_new_calculation_jButton3ActionPerformed
        // TODO add your handling code here:
        rowCounter = 0;
        int rowCounter = 0;
        int columnCounter = 0;
//        Start : This block will make all the table row Null and it will be then prepare for storing New Data.
        while (rowCounter < time_table_jTable1.getRowCount()) {
            while (columnCounter < time_table_jTable1.getColumnCount()) {
                time_table_jTable1.setValueAt(0.0, rowCounter, columnCounter);
                columnCounter++;
            }
            columnCounter = 0;
            rowCounter++;
        }
//        End : This block will make all the table row Null and it will be then prepare for storing New Data.
    }//GEN-LAST:event_start_new_calculation_jButton3ActionPerformed

    private void clear_calculate_jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_clear_calculate_jButton2ActionPerformed
    {//GEN-HEADEREND:event_clear_calculate_jButton2ActionPerformed
        // TODO add your handling code here:
//    This method will clear all the rc,rd,qf fields. Both in minute and percentage.
        minute_qf_jTextField1.setText("0");
        minute_rc_jTextField2.setText("0");
        minute_rd_jTextField3.setText("0");

        percentage_qf_jTextField6.setText("0");
        percentage_rc_jTextField5.setText("0");
        percentage_rd_jTextField4.setText("0");
    }//GEN-LAST:event_clear_calculate_jButton2ActionPerformed

    private void start_jTextField1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_start_jTextField1ActionPerformed
    {//GEN-HEADEREND:event_start_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_start_jTextField1ActionPerformed

    private void take_end_as_start_jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_take_end_as_start_jButton1ActionPerformed
    {//GEN-HEADEREND:event_take_end_as_start_jButton1ActionPerformed
        // TODO add your handling code here:

        setting_minute_the_rc_rd_qf();
        if ((rc + rd + qf) != time_intervel_Minute) {
            JOptionPane.showMessageDialog(rootPane, "The Time is not Analyzed Yet...!\n or \n Not Analyzed Correctly...!");
        }
        if ((rc + rd + qf) == time_intervel_Minute) {
            if(start_jTextField1.getText().toString() != end_jTextField2.getText().toString()){
                set_data_to_table_jButton1ActionPerformed(evt);
                clear_calculate_jButton2ActionPerformed(evt);
                start_jTextField1.setText(end_jTextField2.getText());
                end_jTextField2.setText(null);
                String type = timeType_textArea.getText().toString();
                endAsStart = true;
                timeEntry.get(counter).setTaken(true);
            }else{
                JOptionPane.showMessageDialog(rootPane, "Start and End time can not be same.");
            }
        }
    }//GEN-LAST:event_take_end_as_start_jButton1ActionPerformed

    private void minute_rd_jTextField3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_minute_rd_jTextField3ActionPerformed
    {//GEN-HEADEREND:event_minute_rd_jTextField3ActionPerformed
        // TODO add your handling code here:
        setting_minute_the_rc_rd_qf();
        show_total_time_after_analysis_jLabel8.setText(Float.toString((rc + rd + qf)));
    }//GEN-LAST:event_minute_rd_jTextField3ActionPerformed

    private void minute_rc_jTextField2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_minute_rc_jTextField2ActionPerformed
    {//GEN-HEADEREND:event_minute_rc_jTextField2ActionPerformed
        // TODO add your handling code here:
        setting_minute_the_rc_rd_qf();
        show_total_time_after_analysis_jLabel8.setText(Float.toString((rc + rd + qf)));
    }//GEN-LAST:event_minute_rc_jTextField2ActionPerformed

    private void end_jTextField2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_end_jTextField2ActionPerformed
    {//GEN-HEADEREND:event_end_jTextField2ActionPerformed
        // TODO add your handling code here:
        find_difference_jButton2ActionPerformed(evt);

//        show_time_intervel_jLabel1.setText( Integer.toString( time_intervel_Minute ) );
    }//GEN-LAST:event_end_jTextField2ActionPerformed

    private void calculate_jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_calculate_jButton1ActionPerformed
    {//GEN-HEADEREND:event_calculate_jButton1ActionPerformed
        // TODO add your handling code here:

        setting_percentage_rc_rd_qf();

        Float rc_percentage_in_decimal = rc_percentage / 100;
        Float rd_percentage_in_decimal = rd_percentage / 100;
        Float qf_percentage_in_decimal = qf_percentage / 100;

        rc = time_intervel_Minute * rc_percentage_in_decimal;
        rd = time_intervel_Minute * rd_percentage_in_decimal;
        qf = time_intervel_Minute * qf_percentage_in_decimal;

        minute_rc_jTextField2.setText(Float.toString(rc));
        minute_rd_jTextField3.setText(Float.toString(rd));
        minute_qf_jTextField1.setText(Float.toString(qf));

        setting_minute_the_rc_rd_qf();
        show_total_time_after_analysis_jLabel8.setText(Float.toString((rc + rd + qf)));

        total_percentage_jLabel7.setText(Float.toString((rc_percentage + rd_percentage + qf_percentage)));

    }//GEN-LAST:event_calculate_jButton1ActionPerformed

    private void percentage_rd_jTextField4ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_percentage_rd_jTextField4ActionPerformed
    {//GEN-HEADEREND:event_percentage_rd_jTextField4ActionPerformed
        // TODO add your handling code here:
        calculate_jButton1ActionPerformed(evt);
    }//GEN-LAST:event_percentage_rd_jTextField4ActionPerformed

    private void percentage_rc_jTextField5ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_percentage_rc_jTextField5ActionPerformed
    {//GEN-HEADEREND:event_percentage_rc_jTextField5ActionPerformed
        // TODO add your handling code here:
        calculate_jButton1ActionPerformed(evt);
    }//GEN-LAST:event_percentage_rc_jTextField5ActionPerformed

    private void percentage_qf_jTextField6ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_percentage_qf_jTextField6ActionPerformed
    {//GEN-HEADEREND:event_percentage_qf_jTextField6ActionPerformed
        // TODO add your handling code here:
        calculate_jButton1ActionPerformed(evt);
    }//GEN-LAST:event_percentage_qf_jTextField6ActionPerformed

    private void set_data_to_table_jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_set_data_to_table_jButton1ActionPerformed
    {//GEN-HEADEREND:event_set_data_to_table_jButton1ActionPerformed
        // TODO add your handling code here:

        if ((rc + rd + qf) != time_intervel_Minute) {
            JOptionPane.showMessageDialog(rootPane, "Sorry...The Time has not Analyzed Correctly...!");
        }

        if ((rc + rd + qf) == time_intervel_Minute) {

            time_table_jTable1.setValueAt(rowCounter, rowCounter, 0);

            time_table_jTable1.setValueAt(start_jTextField1.getText(), rowCounter, 1);//start
            time_table_jTable1.setValueAt(end_jTextField2.getText(), rowCounter, 2);//end

            time_table_jTable1.setValueAt(time_intervel_Minute, rowCounter, 3);//intervel

            time_table_jTable1.setValueAt(minute_rc_jTextField2.getText(), rowCounter, 5);//rc
            time_table_jTable1.setValueAt(minute_rd_jTextField3.getText(), rowCounter, 4);
            time_table_jTable1.setValueAt(minute_qf_jTextField1.getText(), rowCounter, 6);

            rowCounter++;
        }
    }//GEN-LAST:event_set_data_to_table_jButton1ActionPerformed

    private void calculate_the_result_jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_calculate_the_result_jButton2ActionPerformed
    {//GEN-HEADEREND:event_calculate_the_result_jButton2ActionPerformed
        // TODO add your handling code here:
        int row_counter = 0;

        float total_time = 0;

        float total_rc = 0;
        float total_rd = 0;
        float total_qf = 0;

        float rst = 0;

        float e = 0;

        while (row_counter < time_table_jTable1.getRowCount()) {
            total_time = total_time + Float.parseFloat(time_table_jTable1.getValueAt(row_counter, 3).toString());//total Time
            total_rc = total_rc + Float.parseFloat(time_table_jTable1.getValueAt(row_counter, 5).toString());//rc
            total_rd = total_rd + Float.parseFloat(time_table_jTable1.getValueAt(row_counter, 4).toString());//rd
            total_qf = total_qf + Float.parseFloat(time_table_jTable1.getValueAt(row_counter, 6).toString());//qf
            row_counter++;
        }

        rst = total_time - total_rc;

        e = (total_rd / rst);

        total_time_jLabel1.setText("Total: " + total_time);
        total_rc_jLabel3.setText("RC: " + total_rc);
        total_rd_jLabel2.setText("RD: " + total_rd);
        total_qf_jLabel4.setText("QF:" + total_qf);
        total_rst_jLabel5.setText("Rst: " + rst);
        e_jLabel6.setText("E:" + e);

        checker_that_all_right_jLabel1.setText("Check:" + (total_rc + total_rd + total_qf));
    }//GEN-LAST:event_calculate_the_result_jButton2ActionPerformed

    private void Calculate_minute_jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_Calculate_minute_jButton1ActionPerformed
    {//GEN-HEADEREND:event_Calculate_minute_jButton1ActionPerformed
        // TODO add your handling code here:

        rc = Float.parseFloat(minute_rc_jTextField2.getText().toString());
        rd = Float.parseFloat(minute_rd_jTextField3.getText().toString());
        qf = Float.parseFloat(minute_qf_jTextField1.getText().toString());

        show_total_time_after_analysis_jLabel8.setText(Float.toString((rc + rd + qf)));
    }//GEN-LAST:event_Calculate_minute_jButton1ActionPerformed

    private void all_rd_jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_all_rd_jButton2ActionPerformed
    {//GEN-HEADEREND:event_all_rd_jButton2ActionPerformed
        // TODO add your handling code here:
        clear_calculate_jButton2ActionPerformed(evt);
        minute_rd_jTextField3.setText(Integer.toString(time_intervel_Minute));
        Calculate_minute_jButton1ActionPerformed(evt);
    }//GEN-LAST:event_all_rd_jButton2ActionPerformed

    private void all_rc_jButton3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_all_rc_jButton3ActionPerformed
    {//GEN-HEADEREND:event_all_rc_jButton3ActionPerformed
        // TODO add your handling code here:
        clear_calculate_jButton2ActionPerformed(evt);
        minute_rc_jTextField2.setText(Integer.toString(time_intervel_Minute));
        Calculate_minute_jButton1ActionPerformed(evt);
    }//GEN-LAST:event_all_rc_jButton3ActionPerformed

    private void all_qf_jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_all_qf_jButton1ActionPerformed
    {//GEN-HEADEREND:event_all_qf_jButton1ActionPerformed
        // TODO add your handling code here:
        clear_calculate_jButton2ActionPerformed(evt);
        minute_qf_jTextField1.setText(Integer.toString(time_intervel_Minute));
        Calculate_minute_jButton1ActionPerformed(evt);
    }//GEN-LAST:event_all_qf_jButton1ActionPerformed

    private void rest_rd_jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_rest_rd_jButton2ActionPerformed
    {//GEN-HEADEREND:event_rest_rd_jButton2ActionPerformed
        // TODO add your handling code here:
        Float rest_rd;
        setting_minute_the_rc_rd_qf();
        rest_rd = time_intervel_Minute - (rc + qf);
        minute_rd_jTextField3.setText(Float.toString(rest_rd));
    }//GEN-LAST:event_rest_rd_jButton2ActionPerformed

    private void rest_rc_jButton3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_rest_rc_jButton3ActionPerformed
    {//GEN-HEADEREND:event_rest_rc_jButton3ActionPerformed
        // TODO add your handling code here:
        Float rest_rc;
        setting_minute_the_rc_rd_qf();
        rest_rc = time_intervel_Minute - (rd + qf);
        minute_rc_jTextField2.setText(Float.toString(rest_rc));
    }//GEN-LAST:event_rest_rc_jButton3ActionPerformed

    private void rest_qf_jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_rest_qf_jButton1ActionPerformed
    {//GEN-HEADEREND:event_rest_qf_jButton1ActionPerformed
        // TODO add your handling code here:
        Float rest_qf;
        setting_minute_the_rc_rd_qf();
        rest_qf = time_intervel_Minute - (rc + rd);
        minute_qf_jTextField1.setText(Float.toString(rest_qf));
    }//GEN-LAST:event_rest_qf_jButton1ActionPerformed

    boolean noType = false;
    int counter = 0;
    private void next_button_actionEvent(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_next_button_actionEvent
        // TODO add your handling code here:
        if (endAsStart != false) {
            counterLabel.setText(Integer.toString(counter));
            if (timeEntry.get(counter).isTaken()) {
                Model_Times model_Times = timeEntry.get(counter);
                counter++;
                String endTime = model_Times.getEndTime();
                String timeType = model_Times.getTimeType();
                end_jTextField2.setText(endTime);
                timeType_textArea.setText(timeType);
                if(autoAnaLize_checkBox.isSelected()){
                    AnalyzeActionPerformed(evt);
                }//if
            } else {
                JOptionPane.showMessageDialog(rootPane, "Sorry U are not allowed to skip a time.");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Plase Use End time as Start time.");
        }
    }//GEN-LAST:event_next_button_actionEvent

    boolean endAsStart = true;
    boolean first = true;

    public void auto_time_analysis(String timeType, ActionEvent evt) {
        if (timeType.equals("f")) {
            rest_qf_jButton1ActionPerformed(evt);
        } else if (timeType.equals("c_ano")) {
            rest_rc_jButton3ActionPerformed(evt);
        } else if (timeType.equals("d_pro")) {
            rest_rd_jButton2ActionPerformed(evt);
        } else if (timeType.equals("d_toefl")) {
            rest_rd_jButton2ActionPerformed(evt);
        } else if (timeType.equals("c_s")) {
            rest_rc_jButton3ActionPerformed(evt);
        } else if (timeType.equals("c_nm")) {
            rest_rc_jButton3ActionPerformed(evt);
        } else if (timeType.equals("c_data")) {
            rest_rc_jButton3ActionPerformed(evt);
            System.out.println("c_data");
        } else if (timeType.equals("c_ex")) {
            rest_rc_jButton3ActionPerformed(evt);
        } else if (timeType.equals("c_eat")) {
            rest_rc_jButton3ActionPerformed(evt);
        } else if (timeType.equals("c_sma")) {
            rest_rc_jButton3ActionPerformed(evt);
        } else if (timeType.equals("c_wr")) {
            rest_rc_jButton3ActionPerformed(evt);
        } else if (timeType.equals("**")) {
            rest_rc_jButton3ActionPerformed(evt);
        } else if (timeType.equals("c_bath")) {
            rest_rc_jButton3ActionPerformed(evt);
        } else if (timeType.equals("c_mtv")) {
            rest_rc_jButton3ActionPerformed(evt);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Sorry...No Type Found");
            noType = true;
        }
        endAsStart = false;

    }//auto Analysis

    LinkedList<Model_Times> timeEntry = new LinkedList<Model_Times>();
    private void loadTimesFromFile_button_actionEvent(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadTimesFromFile_button_actionEvent
        counter=0;
        timeEntry.clear();
        String fileName = fileName1.getText().toString();
        StringBuilder sb = new StringBuilder();
        try (BufferedReader br = Files.newBufferedReader(Paths.get(fileName))) {
            // read line by line
            String line;
            while ((line = br.readLine()) != null) {
                String[] data = line.split(",");
                Model_Times model_Times = new Model_Times();
                model_Times.setStartTime(data[0]);
                model_Times.setEndTime(data[1]);
                model_Times.setTimeType(data[2]);
                model_Times.setTaken(false);
                timeEntry.add(model_Times);
            }

        } catch (IOException e) {
            System.err.format("IOException: %s%n", e);
        }
    }//GEN-LAST:event_loadTimesFromFile_button_actionEvent

    private void resetValue_button_actionEvent(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetValue_button_actionEvent
        // TODO add your handling code here:
        int value = Integer.parseInt(counterValue.getText().toString());
        counter = value;
        String endTime = timeEntry.get(counter).endTime;
        String type = timeEntry.get(counter).timeType;
        end_jTextField2.setText(endTime);
        timeType_textArea.setText(type);
    }//GEN-LAST:event_resetValue_button_actionEvent

    private void AnalyzeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnalyzeActionPerformed
        find_difference_jButton2ActionPerformed(evt);
        String timeType = timeType_textArea.getText().toString();
        System.out.println("timeType : " + timeType);

        auto_time_analysis(timeType, evt);
        if(autoTakeStartEnd_checkBox.isSelected()){
            take_end_as_start_jButton1ActionPerformed(evt);
        }
        if (first == true) {
            endAsStart = false;
            first = false;
        }
    }//GEN-LAST:event_AnalyzeActionPerformed

    private void autoAnaLize_checkBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoAnaLize_checkBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_autoAnaLize_checkBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Time_Analyzer_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Time_Analyzer_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Time_Analyzer_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Time_Analyzer_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Time_Analyzer_Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Analyze;
    private javax.swing.JPanel Button_panel_jPanel1;
    private javax.swing.JButton Calculate_minute_jButton1;
    private javax.swing.JLabel End_jLabel2;
    private javax.swing.JPanel Header_jPanel1;
    private javax.swing.JLabel Start_jLabel1;
    private javax.swing.JLabel Time_Analyzer_jLabel1;
    private javax.swing.JLabel Total_Time_after_Analysis_jLabel7;
    private javax.swing.JButton all_qf_jButton1;
    private javax.swing.JButton all_rc_jButton3;
    private javax.swing.JButton all_rd_jButton2;
    private javax.swing.JCheckBox autoAnaLize_checkBox;
    private javax.swing.JCheckBox autoTakeStartEnd_checkBox;
    private javax.swing.JButton calculate_jButton1;
    private javax.swing.JButton calculate_the_result_jButton2;
    private javax.swing.JLabel checker_that_all_right_jLabel1;
    private javax.swing.JButton clear_calculate_jButton2;
    private javax.swing.JButton clear_time_inputs_jButton1;
    private javax.swing.JLabel counterLabel;
    private javax.swing.JTextField counterValue;
    private javax.swing.JLabel e_jLabel6;
    private javax.swing.JTextField end_jTextField2;
    private javax.swing.JTextField fileName1;
    private javax.swing.JButton find_difference_jButton2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel minute_jLabel4;
    private javax.swing.JLabel minute_jLabel7;
    private javax.swing.JTextField minute_qf_jTextField1;
    private javax.swing.JTextField minute_rc_jTextField2;
    private javax.swing.JTextField minute_rd_jTextField3;
    private javax.swing.JLabel percenatge_jLabel5;
    private javax.swing.JTextField percentage_qf_jTextField6;
    private javax.swing.JTextField percentage_rc_jTextField5;
    private javax.swing.JTextField percentage_rd_jTextField4;
    private javax.swing.JLabel qf_jLabel3;
    private javax.swing.JLabel rc_jLabel2;
    private javax.swing.JLabel rd_jLabel1;
    private javax.swing.JButton rest_qf_jButton1;
    private javax.swing.JButton rest_rc_jButton3;
    private javax.swing.JButton rest_rd_jButton2;
    private javax.swing.JButton set_data_to_table_jButton1;
    private javax.swing.JLabel show_time_intervel_jLabel1;
    private javax.swing.JLabel show_total_time_after_analysis_jLabel8;
    private javax.swing.JTextField start_jTextField1;
    private javax.swing.JButton start_new_calculation_jButton3;
    private javax.swing.JPanel table_jPanel1;
    private javax.swing.JButton take_end_as_start_jButton1;
    private javax.swing.JTextArea timeType_textArea;
    private javax.swing.JTable time_table_jTable1;
    private javax.swing.JLabel total_percentage_jLabel7;
    private javax.swing.JLabel total_qf_jLabel4;
    private javax.swing.JLabel total_rc_jLabel3;
    private javax.swing.JLabel total_rd_jLabel2;
    private javax.swing.JLabel total_rst_jLabel5;
    private javax.swing.JLabel total_time_jLabel1;
    // End of variables declaration//GEN-END:variables
}
